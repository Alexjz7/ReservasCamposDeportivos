// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservasCampoDeportivo.Data;

#nullable disable

namespace ReservasCampoDeportivo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ReservasCampoDeportivo.Models.Canchas", b =>
                {
                    b.Property<int>("id_cancha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_cancha"));

                    b.Property<int?>("Gerenteid_gerente")
                        .HasColumnType("int");

                    b.Property<int>("cantidadCanchas")
                        .HasColumnType("int");

                    b.Property<string>("deporte")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("disponible")
                        .HasColumnType("bit");

                    b.Property<int>("id_gerente")
                        .HasColumnType("int");

                    b.Property<bool>("reservada")
                        .HasColumnType("bit");

                    b.HasKey("id_cancha");

                    b.HasIndex("Gerenteid_gerente");

                    b.ToTable("Canchas");
                });

            modelBuilder.Entity("ReservasCampoDeportivo.Models.Gerentes", b =>
                {
                    b.Property<int>("id_gerente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_gerente"));

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("costoPorHora")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<TimeSpan>("horaApertura")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("horaCierre")
                        .HasColumnType("time");

                    b.Property<string>("nombreCampo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("pass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tipoDocumento")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("validacion")
                        .HasColumnType("bit");

                    b.HasKey("id_gerente");

                    b.ToTable("Gerentes");
                });

            modelBuilder.Entity("ReservasCampoDeportivo.Models.Reservas", b =>
                {
                    b.Property<int>("id_reserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_reserva"));

                    b.Property<int?>("Canchaid_cancha")
                        .HasColumnType("int");

                    b.Property<int?>("Clienteid_usuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_cancha")
                        .HasColumnType("int");

                    b.Property<int>("id_cliente")
                        .HasColumnType("int");

                    b.HasKey("id_reserva");

                    b.HasIndex("Canchaid_cancha");

                    b.HasIndex("Clienteid_usuario");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("ReservasCampoDeportivo.Models.Usuarios", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("Confirmarpass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("pass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tipoDocumento")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("validacion")
                        .HasColumnType("bit");

                    b.HasKey("id_usuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ReservasCampoDeportivo.Models.Canchas", b =>
                {
                    b.HasOne("ReservasCampoDeportivo.Models.Gerentes", "Gerente")
                        .WithMany()
                        .HasForeignKey("Gerenteid_gerente");

                    b.Navigation("Gerente");
                });

            modelBuilder.Entity("ReservasCampoDeportivo.Models.Reservas", b =>
                {
                    b.HasOne("ReservasCampoDeportivo.Models.Canchas", "Cancha")
                        .WithMany()
                        .HasForeignKey("Canchaid_cancha");

                    b.HasOne("ReservasCampoDeportivo.Models.Usuarios", "Cliente")
                        .WithMany()
                        .HasForeignKey("Clienteid_usuario");

                    b.Navigation("Cancha");

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
